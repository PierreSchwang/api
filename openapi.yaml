openapi: 3.0.3
info:
  title: luxor.cloud public API
  version: 0.1.0
paths:
  /users/{id}:
    get:
      description: Returns a user based on the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to return
          schema: 
            type: string
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /users/{id}/servers:
    get:
      description: Returns all the servers a user owns.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        '200':
          description: servers response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/server'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /servers/{id}/actions:
    post:
      description: let the server do stuff
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the server
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/action'
      responses:
        '200':
          description: Updates for actions will be delivered through SSE endpoint.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /servers/{id}/log:
    get:
      description: |
        WebSocket connection to retrieve server logs.
        See https://grafana.com/docs/loki/latest/api/#get-lokiapiv1tail for more information.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the server
          schema:
            type: string
components:
  schemas:
    error:
      type: object
      required:
        - msg
      properties:
        msg:
          type: string
    user:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    server:
      type: object
      required:
        - id
        - name
        - ip
      properties:
        id:
          type: string
        name: 
          type: string
        ip:
          type: string
    action:
      type: object
      required:
        - type
      properties:
        type: 
          $ref: '#/components/schemas/actionEnum'
        data:
          oneOf:
            - $ref: '#/components/schemas/stopActionPayload'
            - $ref: '#/components/schemas/startActionPayload'
            - $ref: '#/components/schemas/restartActionPayload'
            - $ref: '#/components/schemas/backupActionPayload'
    actionEnum:
      type: string
      enum: [stop, start, restart, backup]
